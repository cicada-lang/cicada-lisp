(define-datatype nat
  :zero nat
  :add1 (-> nat nat))

(check nat:zero nat)
(check nat:add1 (-> nat nat))

(check (nat:add1 nat:zero) nat)
(check (nat:add1 (nat:add1 nat:zero)) nat)

(claim add (-> nat nat nat))
(define (add x y)
  (match x
    (nat:zero y)
    ((nat:add1 ,prev) (nat:add1 (add prev)))))
